{
    "openapi": "3.0.0",
    "info": {
        "title": "Simple User Data Store Swap Api",
        "description": "Laravel based API using L5 Swagger for documentation",
        "contact": {
            "name": "Llewellyn",
            "email": "llewellyn@zekini.com"
        },
        "version": "V0.0.1"
    },
    "servers": [
        {
            "url": "http://swap.testapi"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get collection of Users",
                "description": "Returns list of users",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "In a GET request, the response will contain an entity corresponding to the requested resource in this instance Bankaccount",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "The requested resource could not be found but may be available in the future, or the route might be wrong. Subsequent requests by the client are permissible."
                    },
                    "405": {
                        "description": "The resource method is not allowed. i.e post without payload",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user on the system.",
                "description": "Creates user, then kicks off the registration process.",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email address of the user",
                                        "type": "email",
                                        "example": "bane@gothamcity.com"
                                    },
                                    "name": {
                                        "description": "The user's name",
                                        "type": "string",
                                        "example": "Llewellyn"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "password",
                                        "example": "ban3@Batman"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The request has been fulfilled, resulting in the creation of a new User resource.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "304": {
                        "description": "The resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match. In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer_token": {
                "type": "oauth2",
                "description": "Use a global client_id / client_secret and your username / password combo to obtain a token",
                "in": "header",
                "flows": {
                    "password": {
                        "authorizationUrl": "/oauth/authorize",
                        "tokenUrl": "/oauth/token",
                        "refreshUrl": "/oauth/token/refresh",
                        "scopes": {}
                    }
                },
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}